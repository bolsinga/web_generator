Location
	- Street Address
	- City
	- State
	- ZIP
	- URL

Date
	- Year
	- Month
	- Day
	- isUnknown
	
Relation
	- IDRef(s)

Artist
	- ID
	- Name
	- Sort Name
	- Location
	- Albums(s)
	- Relations(s)
	- Comment
	- Active

Song
	- ID
	- Title
	- Performer (Artist)
	- Composer (Artist)
	- Date
	
Album
	- ID
	- Title
	- Artist
	- isCompilation
	- Release Date
	- Purchase Date
	- Label
	- Format
	- isDigitized
	- Song(s)
	- Comment

Venue
	- ID
	- Name
	- Location
	- Relations(s)
	- Comment

Label
	- ID
	- Name
	- Location
	- Relations(s)
	- Comment
	
Show
	- Name
	- Venue
	- Date
	- Artist(s)
	- Headliner?
	- Songs(s)
	- Comment

icalendar format (filename.ics -> "filename" is calendar name in iCal):

BEGIN:VCALENDAR
X-WR-CALNAME:filename
CALSCALE:GREGORIAN
VERSION:2.0
BEGIN:VEVENT
DTSTART;VALUE=DATE:20040328
DTEND;VALUE=DATE:20040329
SUMMARY:band1\, band2 @ venue\, year
URL;VALUE=URI:http://www.io.com/~bolsinga/link_to_show
RRULE:FREQ=YEARLY;INTERVAL=1
END:VEVENT
END:VCALENDAR

-VCalendar
 VCalendar(String name)
 add(VEvent)
 output(OutputStream)

-VEvent
 setDate(Date)
 setSummary(String)
 setURL(URL)
 output(OutputStream)

User Interface (music):

Location editor Panel
Multiple fields

Date editor Panel
Multiple fields

Venue editor Panel
 List of Venues
  Add Button
  Edit Button
 Name
 Location Panel

Artist editor Panel
 List of Artists
  Add Button
  Edit Button
 Name
 Sorted Name
 Location Panel

Show editor Panel
 List of Dates
  Add Button
  Edit Button
 Venue Name
  Edit Button
 Comment

Relation editor Panel
List of Types
 Add Button
 Edit Button
List of Members
 Add Button
 Edit Button

User Interface (diary):

Table of entries (date & comment columns)
Selecting one line will display:
	the Date in a date control (immediately modifying, with warning for older items)
	the Comment in a TextArea (immediately modifying, with warning for older items)
There will also be an "Add" button
The Title will be displayed in a TextField (immediately modifying)
The Header will be displayed in a TextArea (immediately modifying)
The statis will be displayed in a TextArea (immediately modifying)

package com.bolsinga.diary
 DONE rss/RSS.java - contents moved to com.bolsinga.rss.RSS
 DONE ui/UI.java
 DONE util/Links.java
 DONE util/Util.java
 DONE web/Web.java

package com.bolsinga.ical
 OK

package com.bolsinga.itunes
 OK

package com.bolsinga.music
 DONE converter/Music.java - contents/behavior moved to com.bolsinga.shows.converter.Music
 DONE ical/ICal.java
 DONE rss/RSS.java - contents moved to com.bolsinga.rss.RSS
 DONE ui/UI.java
 DONE util/Compare.java
 DONE util/Encode.java
 DONE util/Links.java
 DONE util/Lookup.java
 DONE util/Util.java
 DONE web/Web.java

package com.bolsinga.plist
 DONE util/Util.java

package com.bolsinga.rss
 DONE util/Util.java

package com.bolsinga.shows
 OK

package com.bolsinga.web
 DONE site/Site.java
 DONE util/CSS.java
 DONE util/DocumentCreator.java
 DONE util/MultiDocumentCreator.java
 DONE util/Util.java

-----

Removing CVS tags:

cvs log <file>
<copy the tag names>
pbpaste | cut -f1 -d':' | sed -e"s|.*S|S|g" | xargs -t -n1 -J % cvs tag -d % <file>

-----

Packaging for distribution:

Known Directories:
${OUTPUT_DIR}

Known Files:
${ITUNES_MUSIC_XML}
shows.txt
venuemap.txt
bandsort.txt
relations.txt
comments.txt
statics.txt
diary.xml
music.xml
settings.xml

Known flags:
XML
MusicXML
DiaryXML
Site
MusicSite
DiarySite

-------

How to store Date (inc. Time zone info.)

MySQL - When using DATETIME, the Time Zone isn't applicable. However this will write and
      read them as UTC.

XML / JAXB classes - All UTC, All the time.

When dates/times are in XML or MySQL storage or in classes in memory, they should be UTC.

RSS is UTC

iCal can be UTC

Only convert TZ when displaying the value on a web page.

Use PreparedStatement for: Location, Album, Performance, Song

-------

Java6 has JAXB built-in!

-------

JSON

diary {
 "title" : "",
 "header" : "", // \n delimited array
 "colophon" : "",  // \n delimited array
 "timestamp" : "",
 "friends" : "",  // \n delimited array
 "statics" : "", // \n delimited array
 "entries" : [
    {
      "comment" : "",
      "timestamp" : "",
      "id" : ""
    },
    ...
  ]
}

music {
  "venues" : { 
    "<id>" : {
      "comment" : ""
      "location" : {
        "web" : 
        "street" :
        "state" :
        "zip" :
        "city" :
      },
      "name" : ""
    },
    "<id+1>" : ...
  },
  "shows" : {
    "<id>" : {
      "id" : ""
      "comment" : "",
      "venue" : ID,
      "artists" : [
        "ID"
      ],
      "date" : ""
    },
    "<id+1>" : ...
  },
  "artists" : {
    "<id>" : {
      "id" : ""
      "comment" : "",
      "name" : "",
      "sortname" : "",
      "location" : {
        "web" : 
        "street" :
        "state" :
        "zip" :
        "city" :
      },
      "active" : ""
      "albums" : [
        "ID"
      ]
    },
    "<id+1>" : ...
  },
  "albums" : {
    "<id>" : {
      "id" : ""
      "comment" : ""
      "songs" : [
        "ID"
      ]
    },
    "<id+1>" : ...
  }
}
