<?xml version="1.0" ?>

<project name="web_generator" default="package" basedir=".">

<property name="legacy_data.dir" value="../data/" />
<property name="itunes.dir" value="../data/" />
<property name="data.dir" value="../data/" />
<property name="output.dir" value="/tmp/web" />

<property name="src.dir" value="${basedir}/src" />
<property name="lib.dir" value="${basedir}/lib" />

<!-- This property is the root build dir property. -->
<property name="build.dir" value="${basedir}/output" />

<property name="obj.dir" value="${build.dir}/obj" />
<property name="build.classes" value="${obj.dir}/classes" />
<property name="build.gensrc" value="${obj.dir}/gensrc" />

<property name="sym.dir" value="${obj.dir}/sym" />
<property name="build.lib" value="${sym.dir}/lib" />

<property name="dst.dir" value="${build.dir}/dst" />
<property name="dst.lib" value="${dst.dir}/lib" />

<property name="jwsdp.home" value="${lib.dir}/jwsdp-2.0" />

<property name="build.id" value="${user.name}-internal" />

<path id="jaxb_xjc_classpath">
        <pathelement path="." />
        <pathelement path="${jwsdp.home}/jaxb/lib/jaxb-xjc.jar" />
</path>

<path id="jaxb_binder_classpath">
        <pathelement path="." />
        <pathelement path="${jwsdp.home}/jaxb/lib/jaxb-api.jar" />
        <pathelement path="${jwsdp.home}/jaxb/lib/jaxb-impl.jar" />
        <pathelement path="${jwsdp.home}/sjsxp/lib/jsr173_api.jar" />
</path>

<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
        <classpath refid="jaxb_xjc_classpath" />
</taskdef>

<property name="javac.debug" value="no" />
<property name="javac.lint" value="-Xlint:none" />

<target name="clean">
  <delete dir="${build.dir}" />
</target>

<target name="prepare">
  <tstamp/>
  <mkdir dir="${build.dir}" />
  <mkdir dir="${build.classes}" />
  <mkdir dir="${build.lib}" />
  <mkdir dir="${build.gensrc}" />
  <mkdir dir="${dst.lib}" />
</target>

<target name="music_binding" depends="prepare">
        <xjc schema="${basedir}/xml/music.xsd" target="${build.gensrc}" package="com.bolsinga.music.data.xml" removeOldOutput="yes">
                <depends dir="${basedir}/xml" includes="music.xsd" />
                <produces dir="${build.gensrc}/com/bolsinga/music/data" />
        </xjc>
        <javac  destdir="${build.classes}"
                        debug="${javac.debug}"
                        deprecation="on">
                <src path="${build.gensrc}" />
                <include name="com/bolsinga/music/data/**" />
                <classpath refid="jaxb_binder_classpath" />
        </javac>
        <copy todir="${build.classes}">
                <fileset dir="${build.gensrc}" >
                        <exclude name="**/*.java" />
                </fileset>
        </copy>
</target>

<target name="diary_binding" depends="prepare">
        <xjc schema="${basedir}/xml/diary.xsd" target="${build.gensrc}" package="com.bolsinga.diary.data.xml" removeOldOutput="yes">
                <depends dir="${basedir}/xml" includes="diary.xsd" />
                <produces dir="${build.gensrc}/com/bolsinga/diary/data" />
        </xjc>
        <javac  destdir="${build.classes}"
                        debug="${javac.debug}"
                        deprecation="on">
                <src path="${build.gensrc}" />
                <include name="com/bolsinga/diary/data/**" />
                <classpath refid="jaxb_binder_classpath" />
        </javac>
        <copy todir="${build.classes}">
                <fileset dir="${build.gensrc}" >
                        <exclude name="**/*.java" />
                </fileset>
        </copy>
</target>

<target name="rss_binding" depends="prepare">
        <xjc schema="${basedir}/xml/rss-2_0.xsd" target="${build.gensrc}" package="com.bolsinga.rss.data" removeOldOutput="yes" extension="true">
                <depends dir="${basedir}/xml" includes="rss-2_0.xsd" />
                <produces dir="${build.gensrc}/com/bolsinga/rss/data" />
        </xjc>
        <javac  destdir="${build.classes}"
                        debug="${javac.debug}"
                        deprecation="on">
                <src path="${build.gensrc}" />
                <include name="com/bolsinga/rss/data/**" />
                <classpath refid="jaxb_binder_classpath" />
        </javac>
        <copy todir="${build.classes}">
                <fileset dir="${build.gensrc}" >
                        <exclude name="**/*.java" />
                </fileset>
        </copy>
</target>

<target name="plist_binding" depends="prepare">
        <xjc schema="${basedir}/xml/PropertyList-1.0.xsd" target="${build.gensrc}" package="com.bolsinga.plist.data" removeOldOutput="yes" extension="true">
                <depends dir="${basedir}/xml" includes="PropertyList-1.0.xsd" />
                <produces dir="${build.gensrc}/com/bolsinga/plist/data" />
        </xjc>
        <javac  destdir="${build.classes}"
                        debug="${javac.debug}"
                        deprecation="on">
                <src path="${build.gensrc}" />
                <include name="com/bolsinga/plist/data/**" />
                <classpath refid="jaxb_binder_classpath" />
        </javac>
        <copy todir="${build.classes}">
                <fileset dir="${build.gensrc}" >
                        <exclude name="**/*.java" />
                </fileset>
        </copy>
</target>

<target name="settings_binding" depends="prepare">
        <xjc schema="${basedir}/xml/settings.xsd" target="${build.gensrc}" package="com.bolsinga.settings.data" removeOldOutput="yes" extension="true">
                <depends dir="${basedir}/xml" includes="settings.xsd" />
                <produces dir="${build.gensrc}/com/bolsinga/settings/data" />
        </xjc>
        <javac  destdir="${build.classes}"
                        debug="${javac.debug}"
                        deprecation="on">
                <src path="${build.gensrc}" />
                <include name="com/bolsinga/settings/data/**" />
                <classpath refid="jaxb_binder_classpath" />
        </javac>
        <copy todir="${build.classes}">
                <fileset dir="${build.gensrc}" >
                        <exclude name="**/*.java" />
               </fileset>
        </copy>
</target>

<path id="web_classpath">
        <path refid="jaxb_binder_classpath" />
        <pathelement path="${lib.dir}/ecs-1.4.2.jar" />
</path>

<target name="plist_utilities" depends="plist_binding">
        <javac  destdir="${build.classes}"
                debug="${javac.debug}"
                deprecation="on">
          <compilerarg value="${javac.lint}" compiler="javac1.5" />
          <src path="${src.dir}" />
          <include name="com/bolsinga/plist/*.java" />
          <classpath refid="jaxb_binder_classpath" />
        </javac>
</target>

<target name="web" depends="settings_binding, music_binding, diary_binding">
        <javac  destdir="${build.classes}"
                debug="${javac.debug}"
                deprecation="on">
          <compilerarg value="${javac.lint}" compiler="javac1.5" />
          <src path="${src.dir}" />
          <include name="com/bolsinga/web/*.java" />
          <classpath refid="web_classpath" />
        </javac>
        <tstamp>
                <format property="web.builddate" pattern="EEE MMM dd HH:mm:ss z yyyy" />
                <format property="web.buildyear" pattern="yyyy" />
        </tstamp>
        <copy file="${src.dir}/properties/config.properties" tofile="${build.classes}/com/bolsinga/web/web.properties">
                <filterset>
                        <filter token="builddate" value="${web.builddate}" />
                        <filter token="program" value="com.bolsinga.site-${build.id}" />
                        <filter token="copyright" value="Program Copyright (c) 2004 - ${web.buildyear} Greg Bolsinga" />
                </filterset>
        </copy>
</target>

<target name="sql" depends="prepare">
  <javac destdir="${build.classes}"
         debug="${javac.debug}"
         deprecation="on">
    <compilerarg value="${javac.lint}" compiler="javac1.5" />
    <src path="${src.dir}" />
    <include name="com/bolsinga/sql/*.java" />
    <include name="com/bolsinga/sql/diary/*.java" />
    <include name="com/bolsinga/sql/music/*.java" />
    <classpath refid="web_classpath" />
  </javac>
</target>

<target name="itunes_converter" depends="plist_utilities, music">
        <javac  destdir="${build.classes}"
                debug="${javac.debug}"
                deprecation="on">
          <compilerarg value="${javac.lint}" compiler="javac1.5" />
          <src path="${src.dir}" />
          <include name="com/bolsinga/itunes/converter/*.java" />
          <classpath refid="jaxb_binder_classpath" />
        </javac>
</target>

<target name="music_converter" depends="music, itunes_converter, diary_binding">
        <javac  destdir="${build.classes}"
                debug="${javac.debug}"
                deprecation="on">
          <compilerarg value="${javac.lint}" compiler="javac1.5" />
          <src path="${src.dir}" />
          <include name="com/bolsinga/shows/converter/*.java" />
          <classpath refid="jaxb_binder_classpath" />
        </javac>
</target>

<target name="music" depends="ical_gen, web, sql">
        <javac  destdir="${build.classes}"
                debug="${javac.debug}"
                deprecation="on">
          <compilerarg value="${javac.lint}" compiler="javac1.5" />
          <src path="${src.dir}" />
          <include name="com/bolsinga/music/*.java" />
          <classpath refid="web_classpath" />
        </javac>
</target>

<target name="diary" depends="music, web, diary_binding, sql">
        <javac  destdir="${build.classes}"
                debug="${javac.debug}"
                deprecation="on">
          <compilerarg value="${javac.lint}" compiler="javac1.5" />
          <src path="${src.dir}" />
          <include name="com/bolsinga/diary/*.java" />
          <classpath refid="web_classpath" />
        </javac>
</target>

<target name="rss" depends="music, diary, rss_binding">
        <javac  destdir="${build.classes}"
                debug="${javac.debug}"
                deprecation="on">
          <compilerarg value="${javac.lint}" compiler="javac1.5" />
          <src path="${src.dir}" />
          <include name="com/bolsinga/rss/*.java" />
          <classpath refid="web_classpath" />
        </javac>
</target>

<target name="ical_gen" depends="prepare">
        <javac  destdir="${build.classes}"
                debug="${javac.debug}"
                deprecation="on">
          <compilerarg value="${javac.lint}" compiler="javac1.5" />
          <src path="${src.dir}" />
          <include name="com/bolsinga/ical/*.java" />
        </javac>
</target>

<target name="jar">
        <jar jarfile="${build.lib}/${ant.project.name}.jar"
                basedir="${build.classes}" >
                <exclude name="com/bolsinga/sql/**" />
                <exclude name="com/bolsinga/test/**" />
                <include name="com/bolsinga/**" />
        </jar>
</target>

<path id="music_classpath">
        <path refid="jaxb_binder_classpath" />
        <pathelement path="${build.lib}/${ant.project.name}.jar" />
</path>

<target name="test" depends="music, diary, rss, music_converter">
        <javac  destdir="${build.classes}"
                debug="${javac.debug}"
                deprecation="on">
          <compilerarg value="${javac.lint}" compiler="javac1.5" />
          <src path="${src.dir}" />
          <include name="com/bolsinga/test/*.java" />
          <classpath refid="web_classpath" />
        </javac>
</target>

<target name="site" depends="test">
        <javac  destdir="${build.classes}"
                debug="${javac.debug}"
                deprecation="on">
          <compilerarg value="${javac.lint}" compiler="javac1.5" />
          <src path="${src.dir}" />
          <include name="com/bolsinga/site/*.java" />
          <classpath refid="music_classpath" />
        </javac>
</target>

<target name="generateMusicXML" depends="music_converter, jar">
        <java classname="com.bolsinga.shows.converter.Music" fork="true">
                <arg value="${legacy_data.dir}shows.txt" />
                <arg value="${legacy_data.dir}venuemap.txt" />
                <arg value="${legacy_data.dir}bandsort.txt" />
                <arg value="${legacy_data.dir}relations.txt" />
                <arg value="${itunes.dir}iTunes Music Library.xml" />
                <arg value="${data.dir}music.xml" />
                <classpath refid="music_classpath" />
        </java>
</target>

<target name="generateDiaryXML" depends="music_converter, jar">
        <java classname="com.bolsinga.shows.converter.Diary" fork="true">
                <arg value="${legacy_data.dir}comments.txt" />
                <arg value="${legacy_data.dir}statics.txt" />
                <arg value="${data.dir}diary.xml" />
                <classpath refid="music_classpath" />
        </java>
</target>

<path id="generate_web_classpath">
        <path refid="music_classpath" />
        <pathelement path="${jwsdp.home}/jwsdp-shared/lib/activation.jar" />
        <pathelement path="${lib.dir}/ecs-1.4.2.jar" />
</path>

<target name="prepare_output" >
  <mkdir dir="${output.dir}" />
</target>

<target name="generateCSSTemplate" depends="web, jar, prepare_output">
  <java classname="com.bolsinga.web.CSS" fork="true">
    <arg value="${data.dir}settings.xml" />
    <arg value="${data.dir}layout.css" />
    <arg value="${output.dir}" />
    <classpath refid="generate_web_classpath" />
    <sysproperty key="web.debug_output" value="false" />
  </java>
</target>

<target name="encoding" depends="music, diary, jar">
  <java classname="com.bolsinga.web.Encode" fork="true">
    <arg value="${data.dir}diary.xml" />
    <arg value="${data.dir}music.xml" />
    <arg value="${data.dir}settings.xml" />
    <arg value="${output.dir}" />
    <classpath refid="generate_web_classpath" />
  </java>
</target>

<!--    Add the following property to any web using code to have the output's
                container tags be pretty printed. This can assist in debugging the output.

                <sysproperty key="web.debug_output" value="true" />
-->

<target name="generateMusicWeb" depends="music, jar, prepare_output">
  <java classname="com.bolsinga.test.MusicTest" fork="true">
    <jvmarg value="-Xms96m" />
    <jvmarg value="-Xmx96m" />
    <arg value="xml" />
    <arg value="${data.dir}music.xml" />
    <arg value="${data.dir}settings.xml" />
    <arg value="${output.dir}" />
    <classpath refid="generate_web_classpath" />
  </java>
</target>

<target name="generateDiaryWeb" depends="diary, jar, prepare_output">
  <java classname="com.bolsinga.test.DiaryTest" fork="true">
    <jvmarg value="-Xms96m" />
    <jvmarg value="-Xmx96m" />
    <arg value="xml" />
    <arg value="${data.dir}diary.xml" />
    <arg value="${data.dir}music.xml" />
    <arg value="${data.dir}settings.xml" />
    <arg value="${output.dir}" />
    <classpath refid="generate_web_classpath" />
  </java>
</target>

<target name="generateRSS" depends="rss, jar, prepare_output" >
  <java classname="com.bolsinga.test.RSSTest" fork="true" >
    <jvmarg value="-Xms96m" />
    <jvmarg value="-Xmx96m" />
    <arg value="xml" />
    <arg value="${data.dir}diary.xml" />
    <arg value="${data.dir}music.xml" />
    <arg value="${data.dir}settings.xml" />
    <arg value="${output.dir}" />
    <classpath refid="generate_web_classpath" />
  </java>
</target>

<target name="generateICal" depends="music, jar, prepare_output">
  <java classname="com.bolsinga.test.ICalTest" fork="true">
    <jvmarg value="-Xms96m" />
    <jvmarg value="-Xmx96m" />
    <arg value="xml" />
    <arg value="${data.dir}music.xml" />
    <arg value="${data.dir}settings.xml" />
    <arg value="${output.dir}" />
    <classpath refid="generate_web_classpath" />
  </java>
</target>

<target name="generateXML" depends="generateMusicXML, generateDiaryXML" />

<!--
The package target below used to also install the sql jar:
  <copy file="${lib.dir}/mysql-connector-java-3.1.12-bin.jar" todir="${dst.lib}" />
-->

<target name="package" depends="site, jar" >
  <exec executable="cp" >
    <arg line="${src.dir}/scripts/site ${dst.dir}" />
  </exec>
  <exec executable="cp" >
    <arg line="${src.dir}/scripts/upload ${dst.dir}" />
  </exec>
  <exec executable="cp" >
    <arg line="${src.dir}/scripts/check ${dst.dir}" />
  </exec>
  <copy file="${build.lib}/${ant.project.name}.jar" todir="${dst.lib}" />
  <copy file="${lib.dir}/ecs-1.4.2.jar" todir="${dst.lib}" />
  <copy file="${src.dir}/scripts/upload.xml" todir="${dst.lib}" />
  <copy todir="${dst.lib}/jwsdp-2.0">
    <fileset dir="${jwsdp.home}">
      <include name="jaxb/lib/jaxb-api.jar" />
      <include name="jaxb/lib/jaxb-impl.jar" />
      <include name="sjsxp/lib/jsr173_api.jar" />
      <include name="jwsdp-shared/lib/activation.jar" />
    </fileset>
  </copy>
</target>

</project>
